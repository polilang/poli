with banana from fruits

range: ~ python-like range iterable
   !new = a, b, step :
      .current = null

      .end = b or a                            ~ range(end)
      .start = b and (a or 0)                  ~ range(start, end)
      .step = step or (.end < 0 and (-1 or 1)) ~ range(start, end, step)

   !next =:
      if not .current   ~ iteration begins, set current
         .current = .start

      elif  (           ~ continue iteration if goal isn't reached
            .step > 0 and .current <= .end
            ) or (
            .step < 0 and .current >= .end
            )
         .current += .step

      else              ~ iteration end
         return null

      return .current

~~~
for i in range 10
    print i
~~~



while: ~ for loop "while" extension
   !new = cond :
      .condition = cond ~ condition callback

   !next =:
      return .condition(asd) or null ~ if condition is true, continue

~~~
a = 1
for while(: a<10)
    print a++
~~~



switch = item : ~ for loop "switch" extension ; [ comparison-callback, null ]
   return list (... : for i in ... -> if i == item -> return true), null

~~~
for case in switch var
   if case 1
      print "case 1"
      break
   if case 2, 3
      print "case 2 or 3"
      break

   print "default"
~~~


myclass:
   !new =:

   !next =:

   !index = ... :

   !add = other :
   !sub = other :
   !mul = other :
   !div = other :
   !pow = other :
   !mod = other :
   !neg =:

   !eq = other :
   !ne = other :
   !lt = other :
   !gt = other :
   !le = other :
   !ge = other :

   !and = other :
   !or = other :
   !not =:
